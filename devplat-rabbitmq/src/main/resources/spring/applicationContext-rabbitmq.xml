<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:rabbit="http://www.springframework.org/schema/rabbit"
	xsi:schemaLocation="http://www.springframework.org/schema/beans classpath:/org/springframework/beans/factory/xml/spring-beans-3.1.xsd
						http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd
						http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.1.xsd
						http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
						http://www.springframework.org/schema/rabbit http://www.springframework.org/schema/rabbit/spring-rabbit-1.6.xsd" 
						default-autowire="byName">
	
	<!-- 注解配置  -->
	<context:component-scan base-package="org.cisiondata">
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Repository"/>
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Service"/>
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Component"/>
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>  
	</context:component-scan>
	
	<!-- 加载文件配置 -->
	<!--  
	<context:property-placeholder location="classpath:rabbitmq/env.local.properties" ignore-unresolvable="false"/>
	-->
	
	<!--配置connection-factory，指定连接rabbit server参数  cache-mode="CONNECTION" connection-cache-size="10"-->
    <rabbit:connection-factory id="connectionFactory" 
    						   username="${rabbitmq.manager.user}" 
    						   password="${rabbitmq.manager.password}"
                               host="${rabbitmq.ip}"
                               port="${rabbitmq.port}"
                               publisher-confirms="true"  
                               publisher-returns="true"
                               cache-mode="CHANNEL"
                               channel-cache-size="30"
                               connection-timeout="60000"
                               virtual-host="/"/>

    <!--通过指定下面的admin信息，当前producer中的exchange和queue会在rabbitmq服务器上自动生成-->
    <rabbit:admin id="amqpAdmin" connection-factory="connectionFactory" auto-startup="true"/>

    <!--定义queue-->
    <rabbit:queue id="defaultQueue" name="defaultQueue" durable="false" auto-delete="false" exclusive="false" 
    	auto-declare="false" declared-by="amqpAdmin"/>
	
	<rabbit:queue id="defaultTopicQueue" name="defaultTopicQueue" durable="false" auto-delete="false" exclusive="false" 
		auto-declare="false" declared-by="amqpAdmin"/>

    <!-- 定义direct exchange and binding queue -->
    <rabbit:direct-exchange name="directExchange" durable="false" auto-delete="false" auto-declare="false" declared-by="amqpAdmin">
        <rabbit:bindings>
            <rabbit:binding queue="defaultQueue" key="default"></rabbit:binding>
        </rabbit:bindings>
    </rabbit:direct-exchange>
    
    <rabbit:topic-exchange name="topicExchange" durable="false" auto-delete="false" auto-declare="false" declared-by="amqpAdmin">
    	<rabbit:bindings>
            <rabbit:binding queue="defaultTopicQueue" pattern="topic.*"></rabbit:binding>
        </rabbit:bindings>
    </rabbit:topic-exchange>
    
    <!--定义rabbit template用于数据的接收和发送-->
    <rabbit:template id="dAmqpTemplate" connection-factory="connectionFactory" 
    	exchange="directExchange" channel-transacted="false"
    	message-converter="serializerMessageConverter"
    	confirm-callback="confirmCallBackListener"  
        return-callback="returnCallBackListener"   
        mandatory="true" />
   
    <rabbit:template id="tAmqpTemplate" connection-factory="connectionFactory" 
    	exchange="topicExchange" channel-transacted="false"
    	message-converter="serializerMessageConverter"
    	confirm-callback="confirmCallBackListener"  
        return-callback="returnCallBackListener"   
        mandatory="true" />

    <!-- Listener Container -->
    <rabbit:listener-container 
    	connection-factory="connectionFactory" 
	    task-executor="taskExecutor"
    	acknowledge="manual" 
    	concurrency="10" 
    	max-concurrency="20"
    	prefetch="5"
    	message-converter="serializerMessageConverter">
        <rabbit:listener queues="defaultQueue,defaultTopicQueue" ref="receiveConfirmListener"/>
    </rabbit:listener-container>
    
    <!-- 
    <property name="exposeListenerChannel" value="true" />
    <property name="taskExecutor" ref="taskExecutor" />
    -->
    <!--  
    <bean id="messageListenerContainer" class="org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer">
    	<property name="connectionFactory" ref="connectionFactory" />
    	<property name="acknowledgeMode" ref="manual" />
    	<property name="prefetchCount" value="5" />
    	<property name="concurrentConsumers" value="10" />
    	<property name="maxConcurrentConsumers" value="100" />
    	<property name="messageListener" ref="receiveConfirmListener" />
    	<property name="messageConverter" ref="serializerMessageConverter" />
    	<property name="queueNames" value="defaultQueue,defaultTopicQueue" />
    </bean>
    -->
    
    <bean id="manual" class="org.springframework.beans.factory.config.FieldRetrievingFactoryBean">    
        <property name="staticField" value="org.springframework.amqp.core.AcknowledgeMode.MANUAL" />    
    </bean> 
    
    <!--  
    <rabbit:listener-container connection-factory="connectionFactory" acknowledge="auto" task-executor="taskExecutor">  
         <rabbit:listener queues="defaultQueue" ref="messageQueueListenerAdapter" />
    </rabbit:listener-container> 
	-->
	
	<!--  用于消息的监听的代理类MessageListenerAdapter -->
    <!--  
    <bean id="messageQueueListenerAdapter" class="org.springframework.amqp.rabbit.listener.adapter.MessageListenerAdapter">
        <constructor-arg ref="delegateMessageListener" />    
        <property name="defaultListenerMethod" value="onMessage"></property>    
        <property name="messageConverter" ref="jsonMessageConverter"></property>    
    </bean> 
    -->
    
    <!-- 消息转换器SimpleMessageConverter -->    
    <bean id="serializerMessageConverter" class="org.springframework.amqp.support.converter.SimpleMessageConverter"/>   
    
    <!-- 消息转换器JsonMessageConverter -->
    <bean id="jsonMessageConverter" class="org.springframework.amqp.support.converter.Jackson2JsonMessageConverter"/>  
    
     <!--
     Message Properties转换,用于spring-amqp 
     Message对象中的Message Properties和RabbitMQ的Message Properties对象之间互相转换 
     -->        
    <bean id="messagePropertiesConverter" class="org.springframework.amqp.rabbit.support.DefaultMessagePropertiesConverter" />
	  
</beans>